services:
  ecosystem-workbench:
    image: ecosystemai/ecosystem-workbench:latest
    restart: unless-stopped
    environment:
      IP: http://localhost
      PORT: 3001
    networks:
      - ecosystem
    ports:
      - "80:80"
    depends_on:
      ecosystem-server:
        condition: service_healthy
      ecosystem-runtime-solo:
        condition: service_started

  ecosystem-server:
    image: ecosystemai/ecosystem-server:latest
    container_name: ecosystem-server
    restart: unless-stopped
    environment:
      MASTER_KEY: ${ECOSYSTEM_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      IP: http://localhost
      PORT: 3001
      RESET_USER: "true"
      NO_WORKBENCH: "true"
    volumes:
      - ${DATA_PATH}:/data
    networks:
      - ecosystem
    ports:
      - "3001:3001"
      - "54445:54445"
      - "54321:54321"
    healthcheck:
      test: ["CMD-SHELL", "wget --spider --quiet http://localhost:3001/api/v1/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20

  ecosystem-runtime-solo:
    image: ecosystemai/ecosystem-runtime-solo:latest
    container_name: ecosystem-runtime
    restart: unless-stopped
    environment:
      MASTER_KEY: ${ECOSYSTEM_API_KEY}
      NO_MONGODB: 'false'
      FEATURE_DELAY: 800
      MONITORING_DELAY: 120
    volumes:
      - ${DATA_PATH}:/data
    networks:
      - ecosystem
    ports:
      - "8091:8091"
    depends_on:
      ecosystem-server:
        condition: service_healthy

  ecosystem-runtime-solo2:
    image: ecosystemai/ecosystem-runtime-solo:latest
    container_name: ecosystem-runtime2
    restart: unless-stopped
    environment:
      MASTER_KEY: ${ECOSYSTEM_API_KEY}
      NO_MONGODB: 'false'
      FEATURE_DELAY: 800
      MONITORING_DELAY: 240
      PORT: 8092
    volumes:
      - ${DATA_PATH}:/data
    networks:
      - ecosystem
    ports:
      - "8092:8092"
    depends_on:
      ecosystem-server:
        condition: service_healthy

  ecosystem-runtime-solo3:
    image: ecosystemai/ecosystem-runtime-solo:latest
    container_name: ecosystem-runtime3
    restart: unless-stopped
    environment:
      MASTER_KEY: ${ECOSYSTEM_API_KEY}
      NO_MONGODB: 'false'
      FEATURE_DELAY: 800
      MONITORING_DELAY: 240
      PORT: 8093
    volumes:
      - ${DATA_PATH}:/data
    networks:
      - ecosystem
    ports:
      - "8093:8093"
    depends_on:
      ecosystem-server:
        condition: service_healthy


  ecosystem-notebooks:
    image: ecosystemai/ecosystem-notebooks:latest
    container_name: ecosystem-notebooks
    restart: unless-stopped
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    volumes:
      - ${DATA_PATH}/notebooks-users/notebooks:/app/Shared Projects
      - ${DATA_PATH}/notebooks-users:/home
      - ${DATA_PATH}:/data
    networks:
      - ecosystem
    ports:
      - "5111:8000"
      - "8010:8010"
    depends_on:
      ecosystem-server:
        condition: service_healthy

  ecosystem-grafana:
    image: ecosystemai/ecosystem-grafana:latest
    container_name: ecosystem-worker-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ALLOW_EMBEDDING: true
      GF_AUTH_JWT_URL: http://ecosystem-server:3001/api/auth/login
      GF_AUTH_USERNAME: ${GF_AUTH_USERNAME}
      GF_AUTH_PASSWORD: ${GF_AUTH_PASSWORD}
    volumes:
      - ./grafana:/var/lib/grafana
    networks:
      - ecosystem
    ports:
      - "3000:3000"
    depends_on:
      ecosystem-server:
        condition: service_healthy
      ecosystem-runtime-solo:
        condition: service_started

  ecosystem-manager:
    image: ecosystemai/ecosystem-manager
    container_name: ecosystem-manager
    restart: unless-stopped
    networks:
      - ecosystem
    depends_on:
      ecosystem-server:
        condition: service_healthy
      ecosystem-runtime-solo:
        condition: service_started
  caddy:
    image: caddy:2.10.0
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/site:/srv
      - ./caddy/data:/data
      - ./caddy/config:/config
    networks:
      - ecosystem

networks:
  ecosystem:
    external: true
